{"version":3,"sources":["webpack:///./src/components/WeekDistance/style.js","webpack:///./src/components/WeekDistance/index.js","webpack:///./src/components/ProfileIntroSection/style.js","webpack:///./src/components/ProfileIntroSection/index.js","webpack:///./src/components/ProfileListItem/index.js","webpack:///./src/components/EventListItem/style.js","webpack:///./src/components/EventListItem/index.js","webpack:///./src/components/ProfileList/style.js","webpack:///./src/components/ProfileList/index.js","webpack:///./src/components/ProfileContent/style.js","webpack:///./src/components/ProfileContent/index.js","webpack:///./src/pages/profile.js"],"names":["loading","keyframes","DistanceWrapper","styled","div","fonts","mono","colors","gray500","DistanceLoader","EmojiWrapper","span","Kilometers","a","WeekDistance","state","distance","componentDidMount","getWeekDistance","then","data","setState","e","getEmoji","this","role","aria-label","renderDistance","target","rel","href","render","className","props","Component","Wrapper","section","media","sm","InfoWrapper","Image","blue900","header","md","Content","main","yellow500","ProfileIntroSection","content","Intro","fixed","ProfileListItem","name","url","Position","gray700","darkblue","EventListItem","year","position","company","ListTitle","h2","ProfileList","title","list","ListsSection","ClientsList","profileContent","query","profile","info","edges","node","map","item","heading","paragraph","clients","events","mentions","articles","Head","META","image","common","length","i","event","key","article","mention","client","location","ProfileContent"],"mappings":"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","file":"component---src-pages-profile-js-a9dbb2ca51a4ac759610.js","sourcesContent":["import styled, { keyframes } from \"styled-components\"\nimport { fonts, colors } from \"../../style/constants\"\n\nexport const loading = keyframes`\n  0% {\n    background-position: -20rem 0;\n  }\n  \n  100% {\n    background-position: 20rem 0;\n  }\n`\n\nexport const DistanceWrapper = styled.div`\n  font-family: ${fonts.mono};\n  font-size: 0.9rem;\n  color: ${colors.gray500};\n`\n\nexport const DistanceLoader = styled.div`\n  display: inline-block;\n  height: 1rem;\n  width: 10rem;\n  animation-duration: 0.75s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-name: ${loading};\n  animation-timing-function: linear;\n  background: linear-gradient(to right, #273240 8%, #2c3644 18%, #273240 33%);\n  background-size: 800px 104px;\n  border-radius: 2px;\n`\n\nexport const EmojiWrapper = styled.span`\n  font-size: 0.95rem;\n  color: initial;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 0.5rem;\n`\n\nexport const Kilometers = styled.a`\n  border-bottom: 1px dotted ${colors.gray500};\n  display: inline-block;\n  vertical-align: top;\n  color: #fff;\n`\n","import React, { Component, Fragment } from 'react'\nimport getWeekDistance from '../../utils/functions'\nimport { DistanceWrapper, DistanceLoader, EmojiWrapper, Kilometers } from './style'\n\nclass WeekDistance extends Component {\n  state = { distance: null }\n\n  componentDidMount() {\n    getWeekDistance()\n      .then(data => this.setState({ distance: data.distance }))\n      .catch(e => this.setState({ distance: null }))\n  }\n\n  getEmoji() {\n    const { distance } = this.state\n    \n    return distance >= 40 \n      ? <EmojiWrapper role=\"img\" aria-label=\"fire\">üî•</EmojiWrapper> \n      : <EmojiWrapper role=\"img\" aria-label=\"lighting\">‚ö°Ô∏è</EmojiWrapper>\n  }\n\n  renderDistance() {\n    const { distance } = this.state\n\n    return distance === 0 \n      ? <Fragment><EmojiWrapper role=\"img\" aria-label=\"sad face\">‚òπÔ∏è</EmojiWrapper>No km of running this week</Fragment>\n      : <Fragment>{this.getEmoji(distance)} I've run <Kilometers target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.strava.com/athletes/8681316\">{this.state.distance}km</Kilometers> this week</Fragment>\n  }\n\n  render() {\n    const { className } = this.props\n    \n    return (\n      this.state.distance !== null\n        ? <DistanceWrapper className={className}>{this.renderDistance()}</DistanceWrapper>\n        : <DistanceLoader className={className} />\n    )\n  }\n}\n\nexport default WeekDistance\n","import styled from \"styled-components\"\nimport WeekDistance from \"../WeekDistance\"\nimport Image from \"../Image\"\nimport { colors, media } from \"../../style/constants\"\n\nexport const Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  position: relative;\n  ${media.sm`\n    grid-template-columns: 100%;\n    grid-template-rows: repeat(3, auto);\n    grid-row-gap: 2rem;\n  `}\n`\n\nexport const StyledImage = styled(Image)`\n  grid-area: 1 / 4 / last-line / end;\n  background: ${colors.blue900};\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    padding-top: 150%;\n    display: block;\n    ${media.sm`\n      padding-top: 100%;\n    `}\n  }\n\n  img {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: auto;\n    top: -100%;\n    right: -100%;\n    bottom: -100%;\n    left: -100%;\n    mix-blend-mode: darken;\n    opacity: 0.8;\n    display: block;\n    object-fit: cover;\n    ${media.sm`\n      opacity: .9;\n    `}\n  }\n\n  ${media.sm`\n    grid-area: 1 / 1 / 1 / 1;\n    &:before {\n      padding-top: 100%;\n    }\n  `}\n`\n\nexport const StyledWeekDistance = styled(WeekDistance)`\n  grid-row: 4 / last-line;\n  grid-column: 1 / span 4;\n  align-self: end;\n  z-index: 3;\n`\n\nexport const InfoWrapper = styled.header`\n  grid-row: 2 / 6;\n  grid-column: 1 / 6;\n  z-index: 3;\n  ${media.md`\n    grid-column: 1 / 7;\n  `}\n  ${media.sm`\n    grid-row: 2 / 3;\n    grid-column: 1 / 1;\n  `}\n`\n\nexport const Content = styled.main`\n  margin-top: 1rem;\n  line-height: 1.8em;\n  color: ${colors.gray500};\n  ${media.sm`\n    margin-top: 1rem;\n  `}\n\n  p {\n    margin: 1.5rem 0;\n  }\n\n  a {\n    color: ${colors.blue900};\n    border-bottom: 1px dotted ${colors.gray500};\n\n    &:hover {\n      border-bottom-color: ${colors.yellow500};\n    }\n  }\n`\n","import React from \"react\"\nimport Intro from \"../Intro\"\nimport { Wrapper, InfoWrapper, Content, StyledImage } from \"./style\"\nimport { Loader } from \"../../style/shared\"\nimport { NDAWrapper, StyledDivider, StyledEmailMe } from \"./style\"\n\nconst ProfileIntroSection = ({ content }) => (\n  <Wrapper>\n    <InfoWrapper>\n      <Intro fixed={false} />\n      <Content>{content()}</Content>\n    </InfoWrapper>\n    {/*\n  ====================================\n        <StyledImage \n      src=\"/images/profile/profile.jpg\"\n      alt=\"Pattern\"\n      loader={({ isLoaded }) => <Loader isLoaded={isLoaded} />}\n      sources={[{\n        media: 'max-width: 40rem',\n        srcset: [\n          '/images/profile/profile-square.jpg 1x',\n          '/images/profile/profile-square-2x.jpg 2x',\n          '/images/profile/profile-square-3x.jpg 3x'\n        ]\n      },{\n        srcset: [\n          '/images/profile/profile.jpg 1x',\n          '/images/profile/profile-2x.jpg 2x',\n          '/images/profile/profile-3x.jpg 3x'\n        ]       \n      }]}\n    />\n  ====================================\n*/}\n  </Wrapper>\n)\n\nexport default ProfileIntroSection\n","import React from 'react'\nimport { ListItem } from '../../style/shared'\n\nconst ProfileListItem = ({ name, url }) =>\n  <ListItem>\n    {url \n      ? <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{name}</a>\n      : name}\n  </ListItem>\n\nexport default ProfileListItem\n","import styled from \"styled-components\"\nimport { colors } from \"../../style/constants\"\n\nexport const Position = styled.span`\n  border-bottom: 1px dotted ${colors.gray700};\n`\n\nexport const Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  div {\n    transition: transform 0.3s cubic-bezier(0.45, 0, 0.1, 1);\n    will-change: transform;\n  }\n\n  .position {\n    transform: translateY(0);\n    color: lighten(${colors.gray500}, 10%);\n  }\n\n  .company {\n    color: ${colors.gray500};\n    background: ${colors.darkblue};\n    float: right;\n    padding: 0 0.3rem;\n  }\n\n  .year {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    transform: translateY(100%);\n    color: ${colors.gray500};\n    background: ${colors.darkblue};\n    width: fit-content;\n    padding: 0 1rem;\n  }\n\n  &:hover {\n    .position {\n      transform: translateY(-100%);\n    }\n\n    .year {\n      transform: translateY(0);\n    }\n  }\n`\n","import React from \"react\"\nimport { ListItem } from \"../../style/shared\"\nimport { Wrapper, Position } from \"./style\"\n\nconst EventListItem = ({ year, position, company }) => (\n  <ListItem>\n    <Wrapper>\n      <div className=\"position\">\n        <Position>{position}</Position>\n        {company && <span className=\"company\">{company}</span>}\n      </div>\n      <div className=\"year\">{year}</div>\n    </Wrapper>\n  </ListItem>\n)\n\nexport default EventListItem\n","import styled from \"styled-components\"\nimport { colors } from \"../../style/constants\"\n\nexport const ListTitle = styled.h2`\n  color: ${colors.gray500};\n  font-size: 1.1rem;\n  font-weight: 400;\n  margin-bottom: 1rem;\n\n  &::after {\n    content: \"\";\n    width: 1rem;\n    height: 1px;\n    background: ${colors.yellow500};\n    display: inline-block;\n    vertical-align: middle;\n    margin-left: 1rem;\n  }\n`\n","import React from 'react'\nimport { ListTitle } from './style'\n\nconst ProfileList = ({ title, list, className }) =>\n  <article className={className}>\n    <header>\n      <ListTitle>{title}</ListTitle>\n    </header>\n    <ul>{list()}</ul>\n  </article>\n\nexport default ProfileList\n","import styled from 'styled-components'\nimport { media } from '../../style/constants'\nimport ProfileList from '../ProfileList'\n\nexport const ListsSection = styled.section`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: auto auto;\n  grid-column-gap: 3rem;\n  grid-row-gap: 5rem;\n  padding: 8rem 0 0;\n  ${media.sm`\n    grid-template-columns: repeat(1, 1fr);\n    grid-column-gap: 0;\n    grid-row-gap: 3rem;\n    padding: 4rem 0 0;\n  `}\n`\n\nexport const ClientsList = styled(ProfileList)`\n  ul {\n    display: grid;\n    grid-template-columns: max-content max-content max-content;\n    grid-template-rows: repeat(6, 1fr);\n    grid-auto-flow: column;\n    grid-column-gap: 5rem;\n    ${media.sm`\n      grid-column-gap: 3rem;\n    `}\n\n    ${media.sm`\n      grid-template-columns: repeat(1, 1fr);\n      grid-template-rows: auto;\n      grid-auto-flow: unset;\n      grid-column-gap: 0;\n    `}\n  }\n`","import React from \"react\"\nimport ProfileIntroSection from \"../ProfileIntroSection\"\nimport ProfileListItem from \"../ProfileListItem\"\nimport EventListItem from \"../EventListItem\"\nimport Head from \"../Head\"\nimport ProfileList from \"../ProfileList\"\nimport { META } from \"../../utils/constants\"\nimport { DifferentContentWrapper } from \"../../style/shared\"\nimport { ListsSection, ClientsList } from \"./style\"\nimport InfoCard from \"../InfoCard\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nconst profileContent = () => {\n  const profileQuery = graphql`\n    query {\n      info: allInfoJson {\n        edges {\n          node {\n            profile {\n              heading\n              paragraph\n            }\n            index {\n              heading\n              paragraph\n            }\n          }\n        }\n      }\n    }\n  `\n\n  return (\n    <StaticQuery\n      query={profileQuery}\n      render={data => {\n        const profile = data.info.edges[0].node.profile\n        return (\n          <div>\n            {profile.map(item =>\n              item.heading ? (\n                item.paragraph ? (\n                  <div>\n                    <h1>{item.heading}</h1>\n                    <p>{item.paragraph}</p>\n                  </div>\n                ) : (\n                  <div>\n                    <h1>{item.heading}</h1>\n                  </div>\n                )\n              ) : item.paragraph ? (\n                <div>\n                  <p>{item.paragraph}</p>\n                </div>\n              ) : (\n                \"\"\n              )\n            )}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default ({ data }) => {\n  const { clients, events, mentions, articles } = data\n\n  return (\n    <DifferentContentWrapper>\n      <Head {...META.profile} image={META.common.image} />\n      <ProfileIntroSection content={profileContent} />\n      <ListsSection>\n        {events.edges.length > 0 && (\n          <ProfileList\n            title=\"Timeline\"\n            list={() =>\n              events.edges.map(({ event }, i) => (\n                <EventListItem key={i} {...event} />\n              ))\n            }\n          />\n        )}\n        {articles.edges.length > 0 && (\n          <ProfileList\n            title=\"Hall of Fame\"\n            list={() =>\n              articles.edges.map(({ article }, i) => (\n                <ProfileListItem key={i} {...article} />\n              ))\n            }\n          />\n        )}\n        {mentions.edges.length > 0 && (\n          <ProfileList\n            title=\"Written Contributions\"\n            list={() =>\n              mentions.edges.map(({ mention }, i) => (\n                <ProfileListItem key={i} {...mention} />\n              ))\n            }\n          />\n        )}\n        {clients.edges.length > 0 && (\n          <ClientsList\n            title=\"Companies I have worked with\"\n            list={() =>\n              clients.edges.map(({ client }, i) => (\n                <ProfileListItem key={i} {...client} />\n              ))\n            }\n          />\n        )}\n      </ListsSection>\n    </DifferentContentWrapper>\n  )\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport ProfileContent from '../components/ProfileContent'\n\nconst profileQuery = graphql`\n  query ProfileQuery {\n    clients: allClientsJson {\n      edges {\n        client: node {\n          name\n        }\n      }\n    }\n    events: allEventsJson {\n      edges {\n        event: node {\n          year\n          position\n          company\n        }\n      }\n    }\n    mentions: allMentionsJson {\n      edges {\n        mention: node {\n          name\n          url\n        }\n      }\n    }\n    articles: allArticlesJson {\n      edges {\n        article: node {\n          name\n          url\n        }\n      }\n    }\n  }\n`\n\nexport default ({ location }) =>\n  <StaticQuery \n    query={profileQuery}\n    render={data => \n      <Layout location={location}>\n        <ProfileContent data={data}/>\n      </Layout>\n    }\n  />\n"],"sourceRoot":""}